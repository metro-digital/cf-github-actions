# Copyright 2021 METRO Digital GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Create GCP ServiceAccount key
description: |-
  Create a new Google Cloud Platform Service Account key for the given
  Service Account. Assumes a pre configured gcloud CLI. So you should
  execute google-github-actions/setup-gcloud before
  Returns the newly created keyfile as base64 encoded string.
inputs:
  service_account_email:
    description: |-
      Service account (email) to create the new keyfile for
    required: true
  max_num_keyfiles:
    description: |-
      Max number of service account key files allowed to exists.
      This is checked before creating a new key to ensure there is
      enough headroom for rotation.
      
      Default: 9
      
      If you run multiple rotations within a narrow time window you
      should decrease this value.
    default: 9
outputs:
  project_id:
    description: |-
      GCP project ID the service account belongs to
    value: ${{ steps.key-generator.outputs.project_id }}
  private_key_id:
    description: |-
      service account keyfile id for the newly generated key
    value: ${{ steps.key-generator.outputs.private_key_id }}
  client_email:
    description: |-
      full service account email
    value: ${{ steps.key-generator.outputs.client_email }}
  client_id:
    description: |-
      unique service account id
    value: ${{ steps.key-generator.outputs.client_id }}
  key_file:
    description: |-
      new service account keyfile (base64 encoded)
    value: ${{ steps.key-generator.outputs.key_file }}
runs:
  using: "composite"
  steps:
    - id: key-generator
      run: ${{ github.action_path }}/key-generator.sh
      shell: bash
      env:
        SERVICE_ACCOUNT_EMAIL: ${{ inputs.service_account_email }}
        MAX_NUM_KEYFILES: ${{ inputs.max_num_keyfiles }}
branding:
  color: yellow
  icon: key